class Solution {
public:
    
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {
         int n=image.size();
       
        int visited[101][101];

        memset(visited, 0, sizeof(visited));
       
        queue<pair<int,int>> q;
        q.push(make_pair(sr,sc));
        while(!q.empty()){
            auto x=q.front();
            int i=x.first;
            int j=x.second;
            q.pop();
           visited[i][j]=1;
            if(i+1<n&&(image[i+1][j]==image[i][j])&&!visited[i+1][j])
                q.push(make_pair(i+1,j));
            if(i-1>=0&&image[i-1][j]==image[i][j]&&!visited[i-1][j])
                q.push(make_pair(i-1,j));
            if(j-1>=0&&image[i][j-1]==image[i][j]&&!visited[i][j-1])
                q.push(make_pair(i,j-1));
             if(i-1<n&&image[i][j+1]==image[i][j]&&!visited[i][j+1])
                q.push(make_pair(i,j+1));
            image[i][j]=newColor;
        }
        
        
        return image;
    }
};
