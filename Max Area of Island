class Solution {
public: 
    void dfs(int i, int j, vector<vector<int>>& grid, int n, int m,int &count){
        if(i<0 || j<0 || i>=n || j>=m || grid[i][j]==0|| grid[i][j]==2) return;

       // if(grid[i][j]=='1'){
            grid[i][j]=2;
            count++;
        dfs(i+1,j,grid,n,m,count);
        dfs(i-1,j,grid,n,m,count);
        dfs(i,j+1,grid,n,m,count);
        dfs(i,j-1,grid,n,m,count);
        //count=0;
        //}
    }
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
int maxi=0;
        int count=0;
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                count=0;
                if(grid[i][j]==1){
                    dfs(i,j,grid,n,m,count);
                   maxi=max(maxi,count);
                }
            }
        }
        return maxi;
    }
};
